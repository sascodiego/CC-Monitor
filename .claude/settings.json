{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_FILE_PATHS\" =~ \\.rs$ ]]; then rustfmt \"$CLAUDE_FILE_PATHS\" 2>/dev/null || true; fi",
            "run_in_background": false
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_FILE_PATHS\" =~ \\.rs$ ]] && command -v cargo >/dev/null 2>&1; then cd /mnt/c/src/CC-Monitor && cargo clippy --quiet -- -D warnings 2>&1 | head -20 || true; fi",
            "run_in_background": true
          }
        ]
      },
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_FILE_PATHS\" =~ Cargo\\.toml$ ]] && command -v cargo >/dev/null 2>&1; then cd /mnt/c/src/CC-Monitor && cargo check --quiet 2>&1 | head -10 || true; fi",
            "run_in_background": true
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.command' | grep -qE '^(rm|mv|dd|mkfs|fdisk|parted)\\s' && echo '⚠️  Comando potencialmente peligroso detectado' >&2 || true"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "if command -v cargo >/dev/null 2>&1 && [ -f /mnt/c/src/CC-Monitor/Cargo.toml ]; then echo '🔧 Verificando proyecto Rust...'; cd /mnt/c/src/CC-Monitor && cargo check --quiet 2>&1 | head -5 || true; fi"
          }
        ]
      }
    ]
  }
}